{"version":3,"file":"player.bundle.js","mappings":"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","sources":["webpack:///./src/player.ts","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["interface Frame {\n    timeStamp: number;\n    imageBuffer: string;\n}\n\ninterface FrameGroup {\n    startTime: number;\n    frameInterval: number;\n    frameCount: number;\n    totalHeight: number;\n    width: number;\n    imageBuffer: string;\n}\n\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\nconst timestampSpan = document.getElementById('timestamp') as HTMLSpanElement;\nconst deltaSpan = document.getElementById('delta') as HTMLSpanElement;\nconst fpsSpan = document.getElementById('fps') as HTMLSpanElement;\n\nlet width: number;\nlet height: number;\n\nconst frameBuffer: Frame[] = [];\nconst bufferLimit = 500;\n\nlet frameCount = 0;\nlet lastFTime = 0;\n\nconst wait = async (ms: number) => {\n    return new Promise(res => setTimeout(res, ms));\n}\n\n// Создаем Web Worker\nconst worker = new Worker('imageWorker.js');\n\nworker.onmessage = (event) => {\n    const frames: Frame[] = event.data;\n    frames.forEach((frame) => {\n        frameBuffer.push(frame);\n        if (frameBuffer.length > bufferLimit) {\n            frameBuffer.shift();\n        }\n        frameCount++;\n    });\n};\n\nconst ws = new WebSocket('ws://localhost:8080');\n\nws.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n\n    if (Array.isArray(data)) {\n        // Если пришел массив кадров, обрабатываем его\n        data.forEach((frame: Frame) => {\n            frameBuffer.push(frame);\n            if (frameBuffer.length > bufferLimit) {\n                frameBuffer.shift();\n            }\n            frameCount++;\n        });\n    } else if (data.imageBuffer) {\n        // Если пришла FrameGroup, передаем данные на нарезку в Worker\n        worker.postMessage(data);\n    }\n};\n\nlet fps = 0;\n\nasync function displayFrame() {\n    if (frameBuffer.length > 0) {\n        const frame = frameBuffer.shift()!;\n        const frameTime = frame.timeStamp;\n        const currentTime = Date.now();\n        const timeToWait = frameTime - currentTime;\n\n        if (timeToWait > 0) {\n            await wait(timeToWait);\n        }\n\n        fps++;\n        const image = new Image();\n        image.src = `data:image/png;base64,${frame.imageBuffer}`;\n\n        image.onload = () => {\n            // Получаем фактические размеры изображения\n            width = image.naturalWidth;\n            height = image.naturalHeight;\n\n            // Рассчитываем scale для текущего размера окна\n            const maxWidth = window.innerWidth;\n            const maxHeight = window.innerHeight;\n\n            const scaleX = maxWidth / width;\n            const scaleY = maxHeight / height;\n\n            const scale = Math.min(scaleX, scaleY); // Округляем масштаб до меньшего целого\n\n            // Настраиваем canvas\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n            canvas.style.width = `${canvas.width>>0}px`;\n            canvas.style.height = `${canvas.height>>0}px`;\n\n            // Отключаем сглаживание изображений\n            ctx.imageSmoothingEnabled = false;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Рисуем изображение с учетом масштаба\n            ctx.drawImage(image, 0, 0, width * scale, height * scale);\n\n            // Теперь рисуем сетку поверх изображения\n            drawPixelGrid(scale);\n\n            deltaSpan.textContent = `${(Date.now() - frameTime) >> 0} ms` + \" buff: \" + frameBuffer.length + \" delta frame: \" + (( frameTime- lastFTime) >> 0).toString();\n            lastFTime = frameTime;\n            timestampSpan.textContent = `${new Date(frame.timeStamp).toISOString().substr(14, 9)}`;\n        };\n    }\n    if (Number.parseInt(deltaSpan.textContent ?? '0') < 10) {\n        requestAnimationFrame(displayFrame);\n    } else {\n        setTimeout(()=>displayFrame(), 0)\n    }\n}\n\nsetInterval(() => {\n    fpsSpan.textContent = fps.toString();\n    fps = 0;\n}, 1000);\n\nws.onopen = async () => {\n    await displayFrame();\n};\n\nws.onerror = (error) => {\n    console.error('WebSocket error:', error);\n};\n\nfunction drawPixelGrid(scale: number) {\n    ctx.strokeStyle = 'white'; // Можно вернуть на white после тестирования\n    ctx.lineWidth = 0.1;\n    for (let x = 0; x < canvas.width; x += scale) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n    }\n    for (let y = 0; y < canvas.height; y += scale) {\n        ctx.beginPath();\n        ctx.moveTo(0, y);\n        ctx.lineTo(canvas.width, y);\n        ctx.stroke();\n    }\n}\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/player.ts\"]();\n",""],"names":[],"sourceRoot":""}